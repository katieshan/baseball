<<<<<<< HEAD
batpred3 <- npb3$data
batpred3$pred_games_above_count=batpred3$response*(88-0)+0
batpred1 <- select(batpred1, pred_points_sum)
batpred2 <- select(batpred2, pred_games_count)
batpred3 <- select(batpred3, pred_games_above_count)
batpredout<- cbind(batpredperson, batpred1, batpred2, batpred3)
batpredperson <- select(batpred, person.key)
batnew <- merge(batnew, batpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, pred_points_sum, pred_games_count, pred_games_above_count, fanpos, position)
pitchpred0 <- select(pitchpred, -person.key) %>% mutate(year=2019)
batpredperson <- select(batpred, person.key)
batpredout<- cbind(batpredperson, batpred1, batpred2, batpred3)
batnew <- merge(batnew, batpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, pred_points_sum, pred_games_count, pred_games_above_count, fanpos, position)
View(batnew)
write.csv(batnew, "FinalBatPreds.csv")
pitchpred0 <- select(pitchpred, -person.key) %>% mutate(year=2019)
pitchpred0$points_sum <- NA
pitchpred0 <- fixFactorLevels_pred(p1, pitchpred0, "points_sum")
# pitchpred0 <- impute(pitchpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
pp1 <- predict(p1, newdata=pitchpred0)
# pitchpred0 <- impute(pitchpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
npp1 <- predict(p1, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-points_sum)
pitchpred0$games_count <- NA
pitchpred0 <- fixFactorLevels_pred(p2, pitchpred0, "games_count")
npp2 <- predict(p2, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-games_count)
pitchpred0$games_above_count <- NA
pitchpred0 <- fixFactorLevels_pred(p3, pitchpred0, "games_above_count")
npp3 <- predict(p3, newdata=pitchpred0)
pitchpred1 <- npp1$data
pitchpred2 <- npp2$data
pitchpred3 <- npp3$data
view(pppitch$ranges)
View(pppitch$ranges)
View(pitchpred1)
pitchpred1$pred_points_sum=pitchpred1$response*(712-(-15.66667))+(-15.66667)
pitchpred2$pred_games_count=pitchpred2$response*(82-1)+1
pitchpred3$pred_games_above_count=pitchpred3$response*(31-0)+0
View(pitchpred1)
View(pitchpred1)
pitchpred1 <- select(pitchpred1, pred_points_sum)
pitchpred2 <- select(pitchpred2, pred_games_count)
pitchpred3 <- select(pitchpred3, pred_games_above_count)
pitchpredperson <- select(pitchpred, person.key)
pitchpredout<- cbind(pitchpredperson, pitchpred1, pitchpred2, pitchpred3)
View(pitchpredout)
pitchpred0 <- select(pitchpred, -person.key) %>% mutate(year=2019)
pitchpred0$points_sum <- NA
pitchpred0$games_count <- NA
pitchpred0$games_above_count <- NA
pitchpred0$points_mean <- NA
pitchpred0$points_sd <- NA
pitchpred0 <- predict(pppitch, pitchpred0)
pitchpred0 <- select(pitchpred0, -outcome_cols) %>%
mutate(points_sum = NA)
pitchpred0 <- fixFactorLevels_pred(p1, pitchpred0, "points_sum")
pitchpred0 <-pitchpred %>% mutate(year=2019)
pitchpred0$points_sum <- NA
pitchpred0$games_count <- NA
pitchpred0$games_above_count <- NA
pitchpred0$points_mean <- NA
pitchpred0$points_sd <- NA
pitchpred0 <- predict(pppitch, pitchpred0)
pitchpred0 <- select(pitchpred0, -outcome_cols) %>%
mutate(points_sum = NA)
pitchpred0 <- fixFactorLevels_pred(p1, pitchpred0, "points_sum")
# pitchpred0 <- impute(pitchpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
npp1 <- predict(p1, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-points_sum)
pitchpred0$games_count <- NA
pitchpred0 <- fixFactorLevels_pred(p2, pitchpred0, "games_count")
npp2 <- predict(p2, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-games_count)
pitchpred0$games_above_count <- NA
pitchpred0 <- fixFactorLevels_pred(p3, pitchpred0, "games_above_count")
npp3 <- predict(p3, newdata=pitchpred0)
pitchpred1 <- npp1$data
pitchpred2 <- npp2$data
pitchpred3 <- npp3$data
pitchpred1$pred_points_sum=pitchpred1$response*(712-(-15.66667))+(-15.66667)
pitchpred2$pred_games_count=pitchpred2$response*(82-1)+1
pitchpred3$pred_games_above_count=pitchpred3$response*(31-0)+0
pitchpred1 <- select(pitchpred1, pred_points_sum)
pitchpred2 <- select(pitchpred2, pred_games_count)
pitchpred3 <- select(pitchpred3, pred_games_above_count)
pitchpredperson <- select(pitchpred, person.key)
pitchnew <- merge(pitchnew, pitchpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, pred_points_sum, pred_games_count, pred_games_above_count, fanpos, position)
pitchpredout<- cbind(pitchpredperson, pitchpred1, pitchpred2, pitchpred3)
write.csv(pitchnew, "FinalpitchPreds.csv")
write.csv(batnew, "clean_data/batnew.csv")
write.csv(pitchnew, "clean_data/pitchnew.csv")
View(pitchnew)
fanc <- read_csv("raw_data/FanGraphs Leaderboardcatcher.csv") %>%
mutate(fanpos="C", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan1b <- read_csv("raw_data/FanGraphs Leaderboard1b.csv") %>%
mutate(fanpos="1B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan2b <- read_csv("raw_data/FanGraphs Leaderboard2b.csv") %>%
mutate(fanpos="2B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan3b <- read_csv("raw_data/FanGraphs Leaderboard3b.csv") %>%
mutate(fanpos="3B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanss <- read_csv("raw_data/FanGraphs Leaderboardss.csv") %>%
mutate(fanpos="SS", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanof <- read_csv("raw_data/FanGraphs Leaderboardof.csv") %>%
mutate(fanpos="OF", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof)
fanbat <- fanbat[!duplicated(fanbat[c("mergename")]),]
people <- readRDS("clean_data/databank_people.rds")
colnames(people)
bat2018ppl <- bat2018 %>% select(person.key, F_1B_POS_sum, F_2B_POS_sum, F_3B_POS_sum,
F_SS_POS_sum, F_OF_POS_sum, F_C_POS_sum, age, since_debut)
vector <- apply(select(bat2018ppl, -person.key, -age, -since_debut), 1, which.max)
pos_xwalk <- read_csv("clean_data/pos_xwalk.csv")
bat2018ppl <- cbind(bat2018ppl, posindex=vector) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-F_1B_POS_sum, -F_2B_POS_sum, -F_3B_POS_sum,
-F_SS_POS_sum, -F_OF_POS_sum, -F_C_POS_sum) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname))) %>%
merge(., pos_xwalk, all.x=TRUE)
batnew <- merge(bat2018ppl, fanbat, by="mergename", all.y=TRUE)
batnew$single <- batnew$H - batnew$`2B`-batnew$`3B`-batnew$HR
batnew$nsb <- batnew$SB - batnew$CS
batnew$fanpoints <- as.numeric(calcbat(batnew, R="R", S="single", D="2B", Tr="3B", HR="HR", RBI="RBI", BBB="BB", NSB="nsb"))
teams <- read_csv("clean_data/team_xwalk.csv")
batnew<- merge(batnew, teams)
fanpitch <- read_csv("raw_data/FanGraphs Leaderboardpitchfull.csv") %>%
mutate(mergename=tolower(gsub("[^[:alnum:]]","", Name)))
pitchimport <- function(year){
infile = paste0("clean_data/pitchtrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
=======
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
pitchimport <- function(year){
infile = paste0("clean_data/pitchtrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
pitch2010 <- pitchimport(2010) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2011 <- pitchimport(2011) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2012 <- pitchimport(2012) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2013 <- pitchimport(2013) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2014 <- pitchimport(2014) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2015 <- pitchimport(2015) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2016 <- pitchimport(2016) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2017 <- pitchimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2018 <- pitchimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
train2018 <- addup(2018, pitch2018, pitch2017, pitch2016)
train2017 <- addup(2017, pitch2017, pitch2016, pitch2015)
train2016 <- addup(2016, pitch2016, pitch2015, pitch2014)
train2015 <- addup(2015, pitch2015, pitch2014, pitch2013)
train2014 <- addup(2014, pitch2014, pitch2013, pitch2012)
train2013 <- addup(2013, pitch2013, pitch2012, pitch2011)
train2012 <- addup(2012, pitch2012, pitch2011, pitch2010)
trainpitch <- rbind(train2018, train2017, train2016, train2015, train2014, train2013, train2012)
trainpitch <- lapply(trainpitch, function(col){
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
write_rds(trainbats, "clean_data/trainbats.rds")
write_rds(trainpitch, "clean_data/trainpitch.rds")
#train test split
n <- nrow(trainbats)
shuffled_df <- trainbats[sample(n), ]
train_indices <- 1:round(0.8 * n)
train <- shuffled_df[train_indices, ]
test_indices <- (round(0.8 * n) + 1):n
test <- shuffled_df[test_indices, ]
outcome_cols <- c("person.key", "games_count", "games_above_count", "points_sum", "points_mean", "points_sd")
train0 <- train %>% select(-outcome_cols)
trainout <- train %>% select(outcome_cols)
test0 <- test %>% select(-outcome_cols)
testout <- test %>% select(outcome_cols)
batout <- testout
glmnet_params=makeParamSet(
makeDiscreteParam("alpha", values=c(0, 0.25, 0.5, 0.75, 1.0)),
makeDiscreteParam("nlambda", values=c(100, 250, 500, 750, 1000))
)
set.seed(42)
data(traintemp)
tuneGLMnet <- function(type, data, iters=3, seed=42, targetVar){
set.seed(seed)
traintemp <- cbind(data, trainout[[targetVar]])
colnames(traintemp)[ncol(traintemp)]<-targetVar
task=makeRegrTask(id=type, data=traintemp, target=targetVar)
lrn=makeLearner("regr.glmnet")
ps=glmnet_params
ctrl = makeTuneControlGrid(resolution=4)
rdesc = makeResampleDesc(method = "CV", iters = iters, stratify = F)
results = tuneParams(lrn, task, rdesc, measures=mse, par.set=ps, control=ctrl, show.info=T)
lrn1 = setHyperPars(makeLearner("regr.glmnet"), par.vals = results$x)
m = mlr::train(lrn1, task)
return(m)
}
b1<- tuneGLMnet("bat", train0, targetVar="points_sum")
b2<- tuneGLMnet("bat", train0, targetVar="games_count")
b3<- tuneGLMnet("bat", train0, targetVar="games_above_count")
predicttest <- function(targetVar, model){
testtemp <- cbind(test0, testout[[targetVar]])
colnames(testtemp)[ncol(testtemp)]<-targetVar
preds=predict(model, newdata=testtemp)
return(preds)
}
pb1<- predicttest("points_sum", b1)
pb2<- predicttest("games_count", b2)
pb3<- predicttest("games_above_count", b3)
#now pitching
n <- nrow(trainpitch)
shuffled_df <- trainpitch[sample(n), ]
train_indices <- 1:round(0.8 * n)
train <- shuffled_df[train_indices, ]
test_indices <- (round(0.8 * n) + 1):n
test <- shuffled_df[test_indices, ]
train0 <- train %>% select(-outcome_cols)
trainout <- train %>% select(outcome_cols)
test0 <- test %>% select(-outcome_cols)
testout <- test %>% select(outcome_cols)
pitchout <- testout
p1<- tuneGLMnet("pitch", train0, targetVar="points_sum")
p2<- tuneGLMnet("pitch", train0, targetVar="games_count")
p3<- tuneGLMnet("pitch", train0, targetVar="games_above_count")
predicttest <- function(targetVar, model){
testtemp <- cbind(test0, testout[[targetVar]])
colnames(testtemp)[ncol(testtemp)]<-targetVar
preds=predict(model, newdata=testtemp)
return(preds)
}
pp1<- predicttest("points_sum", b1)
pp2<- predicttest("games_count", b2)
pp3<- predicttest("games_above_count", b3)
save(list = ls("b1", "b2", "b3", "p1", "p2", "p3", "pb1", "pb2", "pb3", "bb1", "bb2", "bb3"), file = "clean_data/models.RData")
View(bat2018)
View(batout)
View(trainpitch)
save(list = ls("b1", "b2", "b3", "p1", "p2", "p3"), file = "clean_data/models.RData")
save(list = ls("b1", "b2", "b3", "p1", "p2", "p3"), file = "clean_data/models.RData", envir=parent.frame())
save(list = ls("b1", "b2", "b3", "p1", "p2", "p3"), file = "clean_data/models.RData", envir=.GlobalEnv)
save(list = ls("b1", "b2", "b3", "p1", "p2", "p3"), file = "clean_data/models.RData", envir=".GlobalEnv")
save(list = ls(b1, b2, b3, p1, p2, p3), file = "clean_data/models.RData", envir=".GlobalEnv")
save(list = c("b1", "b2", "b3", "p1", "p2", "p3"), file = "clean_data/models.RData", envir=".GlobalEnv")
save(list = ("b1", "b2", "b3", "p1", "p2", "p3"), file = "clean_data/models.RData", envir=".GlobalEnv")
save(list = ("b1" "b2" "b3" "p1" "p2" "p3"), file = "clean_data/models.RData", envir=".GlobalEnv")
save("b1", "b2", "b3", "p1", "p2", "p3", file = "clean_data/models.RData")
setwd("C:/Users/Katie/Documents/GitHub/baseball")
source("preprocessing_code/calcpoints.R")
library(tidyverse)
library(mlr)
library(lubridate)
library(glmnet)
library(caret)
batimport <- function(year){
infile = paste0("clean_data/battrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
#this function calculates modes
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
bat2018 <- batimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
# fanbat <- read_csv("raw_data/FanGraphs Leaderboardbat.csv") %>%
#   mutate(mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanc <- read_csv("raw_data/FanGraphs Leaderboardc.csv") %>%
mutate(fanpos="C", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan1b <- read_csv("raw_data/FanGraphs Leaderboard1b.csv") %>%
mutate(fanpos="1B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan2b <- read_csv("raw_data/FanGraphs Leaderboard2b.csv") %>%
mutate(fanpos="2B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan3b <- read_csv("raw_data/FanGraphs Leaderboard3b.csv") %>%
mutate(fanpos="3B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanss <- read_csv("raw_data/FanGraphs Leaderboardss.csv") %>%
mutate(fanpos="SS", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanof <- read_csv("raw_data/FanGraphs Leaderboardof.csv") %>%
mutate(fanpos="OF", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof)
fanc <- read_csv("raw_data/FanGraphs Leaderboardcatcher.csv") %>%
mutate(fanpos="C", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof)
people <- readRDS("clean_data/databank_people.rds")
colnames(people)
bat2018ppl <- bat2018 %>% select(person.key, F_1B_POS_sum, F_2B_POS_sum, F_3B_POS_sum,
F_OF_POS_sum, F_C_POS_sum, age, since_debut)
vector <- apply(select(bat2018ppl, -person.key, -age, -since_debut), 1, which.max)
pos_xwalk <- read_csv("clean_data/pos_xwalk.csv")
bat2018ppl <- cbind(bat2018ppl, posindex=vector) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-F_1B_POS_sum, -F_2B_POS_sum, -F_3B_POS_sum,
-F_SS_POS_sum, -F_OF_POS_sum, -F_C_POS_sum) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname))) %>%
merge(., pos_xwalk, all.x=TRUE)
batnew <- merge(bat2018ppl, fanbat, by="mergename", all.y=TRUE)
batnew$single <- batnew$H - batnew$`2B`-batnew$`3B`-batnew$HR
batnew$nsb <- batnew$SB - batnew$CS
batnew$fanpoints <- calcbat(batnew, R="R", S="single", D="2B", Tr="3B", HR="HR", RBI="RBI", BBB="BB", NSB="nsb")
teams <- read_csv("clean_data/team_xwalk.csv")
batnew<- merge(batnew, teams)
batnew <- merge(bat2018ppl, fanbat, by="mergename", all.y=TRUE)
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof)
View(fanbat)
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof) %>%
fanbat <- fanbat[!duplicated(fanbat[c("Name")]),]
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof)
fanbat <- fanbat[!duplicated(fanbat[c("Name")]),]
batnew <- merge(bat2018ppl, fanbat, by="mergename", all.y=TRUE)
fanbat <- fanbat[!duplicated(fanbat[c("mergename")]),]
View(fanbat)
people <- readRDS("clean_data/databank_people.rds")
colnames(people)
bat2018ppl <- bat2018 %>% select(person.key, F_1B_POS_sum, F_2B_POS_sum, F_3B_POS_sum,
F_OF_POS_sum, F_C_POS_sum, age, since_debut)
vector <- apply(select(bat2018ppl, -person.key, -age, -since_debut), 1, which.max)
pos_xwalk <- read_csv("clean_data/pos_xwalk.csv")
bat2018ppl <- cbind(bat2018ppl, posindex=vector) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-F_1B_POS_sum, -F_2B_POS_sum, -F_3B_POS_sum,
-F_SS_POS_sum, -F_OF_POS_sum, -F_C_POS_sum) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname))) %>%
merge(., pos_xwalk, all.x=TRUE)
bat2018ppl <- bat2018 %>% select(person.key, F_1B_POS_sum, F_2B_POS_sum, F_3B_POS_sum,
F_SS_POS_sum, F_OF_POS_sum, F_C_POS_sum, age, since_debut)
vector <- apply(select(bat2018ppl, -person.key, -age, -since_debut), 1, which.max)
pos_xwalk <- read_csv("clean_data/pos_xwalk.csv")
bat2018ppl <- cbind(bat2018ppl, posindex=vector) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-F_1B_POS_sum, -F_2B_POS_sum, -F_3B_POS_sum,
-F_SS_POS_sum, -F_OF_POS_sum, -F_C_POS_sum) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname))) %>%
merge(., pos_xwalk, all.x=TRUE)
batnew <- merge(bat2018ppl, fanbat, by="mergename", all.y=TRUE)
batnew$single <- batnew$H - batnew$`2B`-batnew$`3B`-batnew$HR
batnew$nsb <- batnew$SB - batnew$CS
batnew$fanpoints <- calcbat(batnew, R="R", S="single", D="2B", Tr="3B", HR="HR", RBI="RBI", BBB="BB", NSB="nsb")
teams <- read_csv("clean_data/team_xwalk.csv")
batnew<- merge(batnew, teams)
fanpitch <- read_csv("raw_data/FanGraphs Leaderboardpitchfull.csv") %>%
mutate(mergename=tolower(gsub("[^[:alnum:]]","", Name)))
pitchimport <- function(year){
infile = paste0("clean_data/pitchtrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
pitch2018 <- pitchimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2018ppl <- pitch2018 %>% select(person.key, P_GS_sum, P_GF_sum, games_count, age, since_debut) %>%
mutate(start_share=P_GS_sum/games_count, close_share=P_GF_sum/games_count,
position=if_else(start_share>0.5, "S", if_else(close_share>0.5, "C", "R"))) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-P_GS_sum, -P_GF_sum, -games_count, -start_share, -close_share) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname)))
pitchnew <- merge(pitch2018ppl, fanpitch, by="mergename", all.y=TRUE)
<<<<<<< HEAD
pitchnew$fanpoints <- as.numeric(calcpitch(pitchnew, GS="GS", IP="IP", ER="ER", PBB="BB", K="SO", SV="SV", HLD="HLD"))
=======
pitchnew$fanpoints <- calcpitch(pitchnew, GS="GS", IP="IP", ER="ER", PBB="BB", K="SO", SV="SV", HLD="HLD")
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
pitchnew<- merge(pitchnew, teams)
colnames(batnew)
batpred <- batnew %>%
filter(!is.na(person.key)) %>%
select(person.key, age, since_debut, team.key_mode=team.key)
<<<<<<< HEAD
bat2017 <- batimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))  %>% select(-nameFirst)
=======
bat2017 <- batimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
lag1 <- bat2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- bat2017 %>%
select(-age, -since_debut) %>%
<<<<<<< HEAD
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
=======
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
batpred <- merge(batpred, lag1, by="person.key")
batpred <- merge(batpred, lag2, by="person.key")
batpred <- lapply(batpred, function(col){
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
<<<<<<< HEAD
col[is.na(col)]= 0
=======
col[is.na(col)]= mean(col, na.rm=TRUE)
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
return(as.numeric(col))
}
}) %>% as.data.frame()
pitchpred <- pitchnew %>%
filter(!is.na(person.key)) %>%
select(person.key, age, since_debut, team.key_mode=team.key)
pitch2017 <- pitchimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
lag1 <- pitch2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- pitch2017 %>%
select(-age, -since_debut) %>%
<<<<<<< HEAD
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
=======
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
pitchpred <- merge(pitchpred, lag1, by="person.key")
pitchpred <- merge(pitchpred, lag2, by="person.key")
pitchpred <- lapply(pitchpred, function(col){
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
<<<<<<< HEAD
col[is.na(col)]= 0
return(as.numeric(col))
}
}) %>% as.data.frame()
#fix factor levels to match those in the model
fixFactorLevels_pred = function(model, newdata, targetvar) {
#get factor levels from model
factor.levels = model$factor.levels
#fix each column in newdata
for (varname in names(factor.levels)){   #for each factored variable in the model...
#if variable names is the target doesn't apply
if(varname == targetvar) {
newdata[[varname]] = NULL
}
#For all other variables...
#if ".merged" is contained within that factor's levels...
else if (".merged" %in% factor.levels[[varname]]){
#convert variable in newdata to character to allow manipulation of data
newdata[[varname]] = as.character(newdata[[varname]])
#overwrite entries in new data varname with .merged if they are unknown factor levels from the model
#change new data variable back to factor with correct levels and overwrite in newdata
newdata[[varname]] = factor(newdata[[varname]],
levels = factor.levels[[varname]])
}
#if ".merged" is not one of the original factor levels it needs to be replaced with na
else if(!(".merged" %in% factor.levels[[varname]])) {
#convert variable in newdata to character to allow manipulation of data
newdata[[varname]] = as.character(newdata[[varname]])
newdata[[varname]][!(newdata[[varname]] %in% factor.levels[[varname]])] = NA
#change new data variable back to factor with correct levels and overwrite in newdata
newdata[[varname]] = factor(newdata[[varname]], levels = factor.levels[[varname]])
}
}
return(newdata)
}
load("clean_data/models.RData")
batpred0 <- batpred %>% mutate(year=2019)
batpred0$points_sum <- NA
batpred0$games_count <- NA
batpred0$games_above_count <- NA
batpred0$points_mean <- NA
batpred0$points_sd <- NA
batpred0 <- predict(ppbat, batpred0)
outcome_cols <- c("person.key", "games_count", "games_above_count", "points_sum", "points_mean", "points_sd")
batpred0 <- select(batpred0, -outcome_cols) %>%
mutate(points_sum = NA)
batpred0 <-  fixFactorLevels_pred(b1, batpred0, "points_sum")
# batpred0 <- impute(batpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
npb1 <- predict(b1, newdata=batpred0)
batpred0 <- batpred0 %>% select(-points_sum)
batpred0$games_count <- NA
batpred0 <- fixFactorLevels_pred(b2, batpred0, "games_count")
npb2 <- predict(b2, newdata=batpred0)
batpred0 <- batpred0 %>% select(-games_count)
batpred0$games_above_count <- NA
batpred0 <- fixFactorLevels_pred(b3, batpred0, "games_above_count")
npb3 <- predict(b3, newdata=batpred0)
batpred1 <- npb1$data
batpred2 <- npb2$data
batpred3 <- npb3$data
batpred1$pred_points_sum=batpred1$response*(782-(-1))+(-1)
batpred2$pred_games_count=batpred2$response*(162-1)+1
batpred3$pred_games_above_count=batpred3$response*(88-0)+0
batpred1 <- select(batpred1, pred_points_sum)
batpred2 <- select(batpred2, pred_games_count)
batpred3 <- select(batpred3, pred_games_above_count)
batpredperson <- select(batpred, person.key)
batpredout<- cbind(batpredperson, batpred1, batpred2, batpred3)
batnew <- merge(batnew, batpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, pred_points_sum, pred_games_count, pred_games_above_count, fanpos, position)
write.csv(batnew, "FinalBatPreds.csv")
#Now pitching
pitchpred0 <-pitchpred %>% mutate(year=2019)
pitchpred0$points_sum <- NA
pitchpred0$games_count <- NA
pitchpred0$games_above_count <- NA
pitchpred0$points_mean <- NA
pitchpred0$points_sd <- NA
pitchpred0 <- predict(pppitch, pitchpred0)
pitchpred0 <- select(pitchpred0, -outcome_cols) %>%
mutate(points_sum = NA)
pitchpred0 <- fixFactorLevels_pred(p1, pitchpred0, "points_sum")
# pitchpred0 <- impute(pitchpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
npp1 <- predict(p1, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-points_sum)
pitchpred0$games_count <- NA
pitchpred0 <- fixFactorLevels_pred(p2, pitchpred0, "games_count")
npp2 <- predict(p2, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-games_count)
pitchpred0$games_above_count <- NA
pitchpred0 <- fixFactorLevels_pred(p3, pitchpred0, "games_above_count")
npp3 <- predict(p3, newdata=pitchpred0)
pitchpred1 <- npp1$data
pitchpred2 <- npp2$data
pitchpred3 <- npp3$data
pitchpred1$pred_points_sum=pitchpred1$response*(712-(-15.66667))+(-15.66667)
pitchpred2$pred_games_count=pitchpred2$response*(82-1)+1
pitchpred3$pred_games_above_count=pitchpred3$response*(31-0)+0
pitchpred1 <- select(pitchpred1, pred_points_sum)
pitchpred2 <- select(pitchpred2, pred_games_count)
pitchpred3 <- select(pitchpred3, pred_games_above_count)
pitchpredperson <- select(pitchpred, person.key)
pitchpredout<- cbind(pitchpredperson, pitchpred1, pitchpred2, pitchpred3)
pitchnew <- merge(pitchnew, pitchpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, pred_points_sum, pred_games_count, pred_games_above_count, position)
write.csv(pitchnew, "FinalpitchPreds.csv")
View(batnew)
View(pitchnew)
View(fanpitch)
=======
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
readRDS("clean_data/models.RData")
load("clean_data/models.RData")
pb1 <- predict(b1, batpred)
summary(b1)
pb1 <- predict(b1$learner.model, batpred)
pb1 <- predict(b1$learner, batpred)
pb1 <- predict(b1, newdata=batpred)
lag1 <- pitch2018 %>%
select(-age, -since_debut, team.key_mode=team.key) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
View(pitch2018)
View(pitchpred)
lag1 <- bat2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- bat2017 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
batpred <- merge(batpred, lag1, by="person.key")
batpred <- merge(batpred, lag2, by="person.key")
batpred <- lapply(batpred, function(col){
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
pitchpred <- pitchnew %>%
filter(!is.na(person.key)) %>%
select(person.key, age, since_debut, team.key_mode=team.key)
pitch2017 <- pitchimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
lag1 <- pitch2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- pitch2017 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
pitchpred <- merge(pitchpred, lag1, by="person.key")
pitchpred <- merge(pitchpred, lag2, by="person.key")
pitchpred <- lapply(pitchpred, function(col){
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
pb1 <- predict(b1, newdata=batpred)
View(pitchpred)
View(batpred)
batpred <- batnew %>%
filter(!is.na(person.key)) %>%
select(person.key, age, since_debut, team.key_mode=team.key)
bat2017 <- batimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
lag1 <- bat2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- bat2017 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
batpred <- merge(batpred, lag1, by="person.key")
batpred <- merge(batpred, lag2, by="person.key")
batpred <- lapply(batpred, function(col){
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
pb1 <- predict(b1, newdata=batpred)
View(batpred)
View(batpred)
View(pitchpred)
batpred0 <- select(batpred, -person.key)
pb1 <- predict(b1, newdata=batpred0)
View(batpred0)
#databank preprocessing
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
setwd("C:/Users/580377/Documents/Personal/GitHub/baseball")
# setwd("C:/Users/Katie/Documents/GitHub/baseball")
source("preprocessing_code/calcpoints.R")
library(tidyverse)
library(mlr)
library(lubridate)
library(glmnet)
<<<<<<< HEAD
library(mice)
=======
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
library(caret)
batimport <- function(year){
infile = paste0("clean_data/battrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
#this function calculates modes
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
<<<<<<< HEAD
bat2018 <- batimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut)) %>% select(-nameFirst)
# fanbat <- read_csv("raw_data/FanGraphs Leaderboardbat.csv") %>%
#   mutate(mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanc <- read_csv("raw_data/FanGraphs Leaderboardcatcher.csv") %>%
mutate(fanpos="C", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan1b <- read_csv("raw_data/FanGraphs Leaderboard1b.csv") %>%
mutate(fanpos="1B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan2b <- read_csv("raw_data/FanGraphs Leaderboard2b.csv") %>%
mutate(fanpos="2B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fan3b <- read_csv("raw_data/FanGraphs Leaderboard3b.csv") %>%
mutate(fanpos="3B", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanss <- read_csv("raw_data/FanGraphs Leaderboardss.csv") %>%
mutate(fanpos="SS", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanof <- read_csv("raw_data/FanGraphs Leaderboardof.csv") %>%
mutate(fanpos="OF", mergename=tolower(gsub("[^[:alnum:]]","", Name)))
fanbat <- rbind(fanc, fan1b, fan2b, fan3b, fanss, fanof)
fanbat <- fanbat[!duplicated(fanbat[c("mergename")]),]
people <- readRDS("clean_data/databank_people.rds")
colnames(people)
bat2018ppl <- bat2018 %>% select(person.key, F_1B_POS_sum, F_2B_POS_sum, F_3B_POS_sum,
F_SS_POS_sum, F_OF_POS_sum, F_C_POS_sum, age, since_debut)
vector <- apply(select(bat2018ppl, -person.key, -age, -since_debut), 1, which.max)
pos_xwalk <- read_csv("clean_data/pos_xwalk.csv")
bat2018ppl <- cbind(bat2018ppl, posindex=vector) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-F_1B_POS_sum, -F_2B_POS_sum, -F_3B_POS_sum,
-F_SS_POS_sum, -F_OF_POS_sum, -F_C_POS_sum) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname))) %>%
merge(., pos_xwalk, all.x=TRUE)
batnew <- merge(bat2018ppl, fanbat, by="mergename", all.y=TRUE)
batnew$single <- batnew$H - batnew$`2B`-batnew$`3B`-batnew$HR
batnew$nsb <- batnew$SB - batnew$CS
batnew$fanpoints <- as.numeric(calcbat(batnew, R="R", S="single", D="2B", Tr="3B", HR="HR", RBI="RBI", BBB="BB", NSB="nsb"))
teams <- read_csv("clean_data/team_xwalk.csv")
batnew<- merge(batnew, teams)
fanpitch <- read_csv("raw_data/FanGraphs Leaderboardpitchfull.csv") %>%
mutate(mergename=tolower(gsub("[^[:alnum:]]","", Name)))
pitchimport <- function(year){
infile = paste0("clean_data/pitchtrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
pitch2018 <- pitchimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2018ppl <- pitch2018 %>% select(person.key, P_GS_sum, P_GF_sum, games_count, age, since_debut) %>%
mutate(start_share=P_GS_sum/games_count, close_share=P_GF_sum/games_count,
position=if_else(start_share>0.5, "S", if_else(close_share>0.5, "C", "R"))) %>%
merge(., people, by.x="person.key", by.y="retroID") %>%
select(-weight, -height, -bats, -throws, -playerID, -debut, -bbrefID, -birthdate,
-P_GS_sum, -P_GF_sum, -games_count, -start_share, -close_share) %>%
mutate(fullname = paste0(nameFirst, " ", nameLast), mergename=tolower(gsub("[^[:alnum:]]","", fullname)))
pitchnew <- merge(pitch2018ppl, fanpitch, by="mergename", all.y=TRUE)
pitchnew$fanpoints <- as.numeric(calcpitch(pitchnew, GS="GS", IP="IP", ER="ER", PBB="BB", K="SO", SV="SV", HLD="HLD"))
pitchnew<- merge(pitchnew, teams)
colnames(batnew)
batpred <- batnew %>%
filter(!is.na(person.key)) %>%
select(person.key, age, since_debut, team.key_mode=team.key)
bat2017 <- batimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))  %>% select(-nameFirst)
lag1 <- bat2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- bat2017 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
batpred <- merge(batpred, lag1, by="person.key")
batpred <- merge(batpred, lag2, by="person.key")
batpred <- lapply(batpred, function(col){
=======
bat2010 <- batimport(2010) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2011 <- batimport(2011) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2012 <- batimport(2012) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2013 <- batimport(2013) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2014 <- batimport(2014) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2015 <- batimport(2015) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2016 <- batimport(2016) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2017 <- batimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
bat2018 <- batimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
addup <- function(year, df0, df1, df2){
lag1<-year-1
lag2<-year-2
out <- df0 %>%
select(person.key, games_count, games_above_count, points_sum, points_mean, points_sd, team.key_mode, age, since_debut) %>%
mutate(year=year)
lag1 <- df1 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- df2 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
df <- merge(out, lag1, by="person.key")
df <- merge(df, lag2, by="person.key")
return(df)
}
train2018 <- addup(2018, bat2018, bat2017, bat2016)
train2017 <- addup(2017, bat2017, bat2016, bat2015)
train2016 <- addup(2016, bat2016, bat2015, bat2014)
train2015 <- addup(2015, bat2015, bat2014, bat2013)
train2014 <- addup(2014, bat2014, bat2013, bat2012)
train2013 <- addup(2013, bat2013, bat2012, bat2011)
train2012 <- addup(2012, bat2012, bat2011, bat2010)
trainbats <- rbind(train2018, train2017, train2016, train2015, train2014, train2013, train2012)
trainbats <- lapply(trainbats, function(col){
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
<<<<<<< HEAD
col[is.na(col)]= 0
return(as.numeric(col))
}
}) %>% as.data.frame()
pitchpred <- pitchnew %>%
filter(!is.na(person.key)) %>%
select(person.key, age, since_debut, team.key_mode=team.key)
pitch2017 <- pitchimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
lag1 <- pitch2018 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag1"))
lag2 <- pitch2017 %>%
select(-age, -since_debut) %>%
rename_at(vars(-person.key),function(x) paste0(x,"_lag2"))
pitchpred <- merge(pitchpred, lag1, by="person.key")
pitchpred <- merge(pitchpred, lag2, by="person.key")
pitchpred <- lapply(pitchpred, function(col){
=======
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
pitchimport <- function(year){
infile = paste0("clean_data/pitchtrain", year ,".rds")
df <- readRDS(infile)
return(df)
}
pitch2010 <- pitchimport(2010) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2011 <- pitchimport(2011) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2012 <- pitchimport(2012) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2013 <- pitchimport(2013) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2014 <- pitchimport(2014) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2015 <- pitchimport(2015) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2016 <- pitchimport(2016) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2017 <- pitchimport(2017) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
pitch2018 <- pitchimport(2018) %>% mutate(age=as.numeric(age), since_debut=as.numeric(since_debut))
train2018 <- addup(2018, pitch2018, pitch2017, pitch2016)
train2017 <- addup(2017, pitch2017, pitch2016, pitch2015)
train2016 <- addup(2016, pitch2016, pitch2015, pitch2014)
train2015 <- addup(2015, pitch2015, pitch2014, pitch2013)
train2014 <- addup(2014, pitch2014, pitch2013, pitch2012)
train2013 <- addup(2013, pitch2013, pitch2012, pitch2011)
train2012 <- addup(2012, pitch2012, pitch2011, pitch2010)
trainpitch <- rbind(train2018, train2017, train2016, train2015, train2014, train2013, train2012)
trainpitch <- lapply(trainpitch, function(col){
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
if(is.factor(col) | is.character(col) | is.logical(col)){
col[is.na(col)] = getmode(col)
return(as.factor(col))
}else{
<<<<<<< HEAD
col[is.na(col)]= 0
return(as.numeric(col))
}
}) %>% as.data.frame()
#fix factor levels to match those in the model
=======
col[is.na(col)]= mean(col, na.rm=TRUE)
return(as.numeric(col))
}
}) %>% as.data.frame()
write_rds(trainbats, "clean_data/trainbats.rds")
write_rds(trainpitch, "clean_data/trainpitch.rds")
#train test split
n <- nrow(trainbats)
shuffled_df <- trainbats[sample(n), ]
train_indices <- 1:round(0.8 * n)
train <- shuffled_df[train_indices, ]
test_indices <- (round(0.8 * n) + 1):n
test <- shuffled_df[test_indices, ]
outcome_cols <- c("person.key", "games_count", "games_above_count", "points_sum", "points_mean", "points_sd")
train0 <- train %>% select(-outcome_cols)
View(batpred0)
View(batpred0)
batpred0 <- select(batpred, -person.key)
pb1 <- predict(b1, newdata=batpred0)
batpred0$points_sum=0
pb1 <- predict(b1, newdata=batpred0)
View(fanbat)
View(batnew)
batpred0 <- select(batpred, -person.key)
pb1 <- predict(b1, newdata=batpred0)
batpred0$points_sum <- NULL
pb1 <- predict(b1, newdata=batpred0)
pb1 <- predict(b1, newdata=data.matrix(batpred0))
batpred0 <- select(batpred, -person.key)
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
fixFactorLevels_pred = function(model, newdata, targetvar) {
#get factor levels from model
factor.levels = model$factor.levels
#fix each column in newdata
for (varname in names(factor.levels)){   #for each factored variable in the model...
#if variable names is the target doesn't apply
if(varname == targetvar) {
newdata[[varname]] = NULL
}
#For all other variables...
#if ".merged" is contained within that factor's levels...
else if (".merged" %in% factor.levels[[varname]]){
#convert variable in newdata to character to allow manipulation of data
newdata[[varname]] = as.character(newdata[[varname]])
#overwrite entries in new data varname with .merged if they are unknown factor levels from the model
<<<<<<< HEAD
=======
newdata[[varname]][!(newdata[[varname]] %in% factor.levels[[varname]])] = ".merged"
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
#change new data variable back to factor with correct levels and overwrite in newdata
newdata[[varname]] = factor(newdata[[varname]],
levels = factor.levels[[varname]])
}
#if ".merged" is not one of the original factor levels it needs to be replaced with na
else if(!(".merged" %in% factor.levels[[varname]])) {
#convert variable in newdata to character to allow manipulation of data
newdata[[varname]] = as.character(newdata[[varname]])
newdata[[varname]][!(newdata[[varname]] %in% factor.levels[[varname]])] = NA
#change new data variable back to factor with correct levels and overwrite in newdata
<<<<<<< HEAD
newdata[[varname]] = factor(newdata[[varname]], levels = factor.levels[[varname]])
=======
newdata[[varname]] = factor(newdata[[varname]],
levels = factor.levels[[varname]])
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
}
}
return(newdata)
}
<<<<<<< HEAD
load("clean_data/models.RData")
batpred0 <- batpred %>% mutate(year=2019)
batpred0$points_sum <- NA
batpred0$games_count <- NA
batpred0$games_above_count <- NA
batpred0$points_mean <- NA
batpred0$points_sd <- NA
batpred0 <- predict(ppbat, batpred0)
outcome_cols <- c("person.key", "games_count", "games_above_count", "points_sum", "points_mean", "points_sd")
batpred0 <- select(batpred0, -outcome_cols) %>%
mutate(points_sum = NA)
batpred0 <-  fixFactorLevels_pred(b1, batpred0, "points_sum")
# batpred0 <- impute(batpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
npb1 <- predict(b1, newdata=batpred0)
batpred0 <- batpred0 %>% select(-points_sum)
batpred0$games_count <- NA
batpred0 <- fixFactorLevels_pred(b2, batpred0, "games_count")
npb2 <- predict(b2, newdata=batpred0)
batpred0 <- batpred0 %>% select(-games_count)
batpred0$games_above_count <- NA
batpred0 <- fixFactorLevels_pred(b3, batpred0, "games_above_count")
npb3 <- predict(b3, newdata=batpred0)
batpred1 <- npb1$data
batpred2 <- npb2$data
batpred3 <- npb3$data
batpred1$pred_points_sum=batpred1$response*(782-(-1))+(-1)
batpred2$pred_games_count=batpred2$response*(162-1)+1
batpred3$pred_games_above_count=batpred3$response*(88-0)+0
batpred1 <- select(batpred1, pred_points_sum)
batpred2 <- select(batpred2, pred_games_count)
batpred3 <- select(batpred3, pred_games_above_count)
batpredperson <- select(batpred, person.key)
batpredout<- cbind(batpredperson, batpred1, batpred2, batpred3)
batnew <- merge(batnew, batpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, G, pred_points_sum, pred_games_count, pred_games_above_count, fanpos, position)
write.csv(batnew, "FinalBatPreds.csv")
#Now pitching
pitchpred0 <-pitchpred %>% mutate(year=2019)
pitchpred0$points_sum <- NA
pitchpred0$games_count <- NA
pitchpred0$games_above_count <- NA
pitchpred0$points_mean <- NA
pitchpred0$points_sd <- NA
pitchpred0 <- predict(pppitch, pitchpred0)
pitchpred0 <- select(pitchpred0, -outcome_cols) %>%
mutate(points_sum = NA)
pitchpred0 <- fixFactorLevels_pred(p1, pitchpred0, "points_sum")
# pitchpred0 <- impute(pitchpred0, classes=list(numeric=mice.impute.mean(), factor=mice.impute.mode()))$data
npp1 <- predict(p1, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-points_sum)
pitchpred0$games_count <- NA
pitchpred0 <- fixFactorLevels_pred(p2, pitchpred0, "games_count")
npp2 <- predict(p2, newdata=pitchpred0)
pitchpred0 <- pitchpred0 %>% select(-games_count)
pitchpred0$games_above_count <- NA
pitchpred0 <- fixFactorLevels_pred(p3, pitchpred0, "games_above_count")
npp3 <- predict(p3, newdata=pitchpred0)
pitchpred1 <- npp1$data
pitchpred2 <- npp2$data
pitchpred3 <- npp3$data
pitchpred1$pred_points_sum=pitchpred1$response*(712-(-15.66667))+(-15.66667)
pitchpred2$pred_games_count=pitchpred2$response*(82-1)+1
pitchpred3$pred_games_above_count=pitchpred3$response*(31-0)+0
pitchpred1 <- select(pitchpred1, pred_points_sum)
pitchpred2 <- select(pitchpred2, pred_games_count)
pitchpred3 <- select(pitchpred3, pred_games_above_count)
pitchpredperson <- select(pitchpred, person.key)
pitchpredout<- cbind(pitchpredperson, pitchpred1, pitchpred2, pitchpred3)
pitchnew <- merge(pitchnew, pitchpredout, by="person.key", all.x = TRUE) %>%
select(person.key, Team, Name, fanpoints, G, pred_points_sum, pred_games_count, pred_games_above_count, position)
write.csv(pitchnew, "FinalpitchPreds.csv")
=======
batpred0 <- fixFactorLevels_pred(b1, batpred0, "points_sum")
pb1 <- predict(b1, newdata=batpred0)
View(batpred0)
>>>>>>> 403414a97a924519cae0c5dd6384e25bfe45b9cd
